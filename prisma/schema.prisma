// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  name String
  email String  @unique
  password String
  thumbnail String?
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	createdTasks Task[]
  settings UserSetting[]
}

model UserSetting {
  id    Int     @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  key String
  values Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sprint {
  id    Int     @id @default(autoincrement())
  title String
  startDate DateTime
  endDate DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  columns Column[]
  tasks Task[]
}

model Task {
	id    Int     @id @default(autoincrement())
	title String
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	createdBy Int
	creator User @relation(fields: [createdBy], references: [id])
	columnId Int
	column Column @relation(fields: [columnId], references: [id])
  sprintId Int?
  sprint Sprint? @relation(fields: [sprintId], references: [id])
  taskMovements TaskMovement[]
}

model TaskMovement {
  id    Int     @id @default(autoincrement())
  taskId Int
  task Task @relation(fields: [taskId], references: [id])
  fromColumnId Int
  fromColumn Column @relation(name: "fromColumn", fields: [fromColumnId], references: [id])
  toColumnId Int
  toColumn Column @relation(name: "toColumn", fields: [toColumnId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Column {
	id    Int     @id @default(autoincrement())
	title String
	isColumnDone Boolean @default(false)
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	tasks Task[]
  fromTaskMovement TaskMovement[] @relation(name: "fromColumn")
  toTaskMovement TaskMovement[] @relation(name: "toColumn")
  sprints Sprint[]
}
